version: '3.4'

services:
  djangoapp:
    # restart: always
    container_name: djangoapp
    build:
      context: .
    networks:
      - django_nginx
      - django_network
    volumes:
      - .:/opt/app
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
    depends_on:
      - postgres

  nginx:
    image: nginx:1.15
    # restart: always
    container_name: nginx
    networks:
      - django_nginx
    volumes:
      - ./config/nginx/prod:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
    ports:
      - 443:443
      - 8000:80
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - djangoapp

  postgres:  # <-- IMPORTANT: same name as in DATABASES setting
    image: postgres:10
    # restart: alfoobar_
    container_name: postgres
    ports:
      - 5432:5432
    env_file:
      - config/postgres/conf.env
    networks:
      - django_network
    volumes:
      - db_volume:/var/lib/postgresql/data
  
  certbot:
    image: certbot/certbot
    # restart: always
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  db_volume:
  static_volume:
  media_volume:

networks:
  django_nginx:
    driver: bridge
  django_network:
    driver: bridge
