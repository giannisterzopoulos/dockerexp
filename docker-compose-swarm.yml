version: '3.4'

services:
  djangoapp:
    # image: terzopoulos/django:test1
    image: localhost:50000/djangoapp:1
    networks:
      - django_nginx
      - foobar_network
    volumes:
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    depends_on:
      - postgres
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
        # constraints: [node.hostname == server01]
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3

  nginx:
    image: nginx:1.15
    networks:
      - django_nginx
    volumes:
      - ./config/nginx/prod:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - djangoapp
    deploy:
      replicas: 2
      restart_policy:
          condition: on-failure
          delay: 3s
          max_attempts: 3

  postgres:  # <-- IMPORTANT: same name as in DATABASES setting
    image: postgres:10
    ports:
      - 5432:5432
    env_file:
      - config/postgres/foobar.env
    networks:
      - foobar_network
    volumes:
      - foobar_volume:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    deploy:
      placement:
        constraints: [node.role == manager]

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

volumes:
  foobar_volume:
  static_volume:
  media_volume:

networks:
  django_nginx:
  foobar_network:
